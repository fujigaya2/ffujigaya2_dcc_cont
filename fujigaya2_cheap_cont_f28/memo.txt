追加機能
・ResetPacket追加
・デコーダーアドレスを128より上に拡張する。
　多機能デコーダとアクセサリデコーダに分かれる

(1)アドレス00000000（0）：ブロードキャストアドレス

多機能デコーダ
(2)アドレス00000001-01111111（1-127）（含む）：7ビットの多機能デコーダーアドレス
アドレス11000000-11100111（192-231）（含む）：14ビットの多機能デコーダーアドレス 39 →OK

(3)アドレス10000000-10111111（128-191）（含む）：9ビットのアドレスを持つ基本的なアクセサリーデコーダーと11ビットのアドレスを持つ拡張アクセサリーデコーダー　63個、OK　１１ビットはどうなっているのか？

(4)アドレス11101000-11111110（232-254）（含む）：将来の使用のために予約済み

→まずは多機能デコーダのアドレス部分を確認する。
0-127の場合は1byte
128以上の場合は2Byteのためそこで場合分け。完了。

ファンクションもアドレスは一緒だが、そのあとの命令部分が複雑で、
function部分は Dが１でOn,Dが０でオフ
100DDDDD F0-F4　でなぜかF0F4F3F2F1の並び順。
1011DDDD F5-F8
1010DDDD F9-F12
11011110 DDDDDDDD F13-F20
11011111 DDDDDDDD F21-F28

FxをOnOffする関数を呼んで、中で振り分けとする！
ここまでOK！


アドレス11111111（255）：アイドルパケット
・ファンクションを０～２８までにする。→たぶんOK（F9以降は今度確認する）

・ポイント機能を追加する。
{preamble} 0 10AAAAAA 0 1AAACDDD 0 EEEEEEEE 1
で2byte目のAAAは１の補数表現→裏返す。０１０→１０１となる。
1byte目が低bitト側
2byte目が高bit側とのこと。
#define ACCESSORY_ORDER      0b10000000
#define ACCESSORY_ADDRESS_MASK1 0b00111111
#define ACCESSORY_ADDRESS_MASK2 0b01110000
#define ACCESSORY_ON         0b10001000
#define ACCESSORY_OFF        0b10000000

CDDD
でCは使用るときは１なので常時１
0bitのDがOnOff
１，２ビットは/4した余りを入れておくようだ。（不明）
というか9ビットのアドレスの下にサブアドレスが4点いているってこと？
そんなこと書いていないけど・・・。
  //addressは1からとする
  //1の時address = 1 D2D1 = 0b00
  //2の時address = 1 D2D1 = 0b01
  //3の時address = 1 D2D1 = 0b10
  //4の時address = 1 D2D1 = 0b11
  //5の時address = 2 D2D1 = 0b00
  //とする


・loopの構造を考える。（定期的に今までの物も送るようにする。）slotを何個か設けるとかにするか？
→また今度にする。

・表示部分を追加（key_emuから）

